<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:security="http://www.springframework.org/schema/security"
       xmlns:sercurity="http://www.springframework.org/schema/cache"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
						http://www.springframework.org/schema/beans/spring-beans.xsd
                          http://www.springframework.org/schema/security
                          http://www.springframework.org/schema/security/spring-security.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd">

    <!--配置匿名访问资源-->
    <security:http pattern="/css/**" security="none"/>
    <security:http pattern="/img/**" security="none"/>
    <security:http pattern="/js/**" security="none"/>
    <security:http pattern="plugins/**" security="none"/>
    <security:http pattern="/login.html" security="none"/>

    <!--配置认证后访问的资源-->
    <security:http auto-config="true" use-expressions="true">

        <security:headers>
            <!--设置页面可以通过iframe访问受保护的页面，默认不允许访问-->
            <security:frame-options policy="SAMEORIGIN"/>
        </security:headers>

        <security:intercept-url pattern="/pages/**" access="isAuthenticated()"/>
        <!--配置登录界面-->
        <security:form-login login-page="/login.html" login-processing-url="/login.do" username-parameter="username"
                             password-parameter="password" default-target-url="/pages/main.html" always-use-default-target="true" authentication-failure-forward-url="/login.html"/>

        <!--配置退出登录-->
        <security:logout logout-url="/logout.do" logout-success-url="/login.html" invalidate-session="true"/>
        <!--关闭csrf-->
        <security:csrf disabled="true"/>
    </security:http>

    <!--配置认证管理器-->
    <security:authentication-manager>
        <security:authentication-provider user-service-ref="springSecurityUserService">
            <!--指定密码加密策略-->
            <security:password-encoder ref="bCryptPasswordEncoder"/>
        </security:authentication-provider>
    </security:authentication-manager>

    <!--注册密码加密对象-->
    <bean id="bCryptPasswordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>

    <!--配置开启注解方式权限控制-->
    <security:global-method-security pre-post-annotations="enabled"/>
</beans>